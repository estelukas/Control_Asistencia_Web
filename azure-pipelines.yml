trigger:
- ControlAsistencia  # üîπ Habilita CI en la rama principal

pool:
 # vmImage: 'windows-latest'
  name: Default

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: SonarQubePrepare@7
  inputs:
    SonarQube: 'SonarQube'  # ‚ö†Ô∏è Debe coincidir con el nombre de la conexi√≥n en Azure DevOps
    scannerMode: 'dotnet'
    projectKey: 'ControlAsistencia_XCF_App_Control_Asistencia_f2a51de7-37ac-469b-954d-9e549b24489a'
    projectName: 'ControlAsistencia_XCF_App'
    extraProperties: |
      sonar.host.url=http://192.168.1.100:9000  
      sonar.sources=server


# üîπ 2Ô∏è‚É£ Compilar soluci√≥n
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# üîπ 3Ô∏è‚É£ Ejecutar an√°lisis de c√≥digo con SonarQube
- task: SonarQubeAnalyze@7

# üîπ 4Ô∏è‚É£ Publicar resultados del an√°lisis en SonarQube
- task: SonarQubePublish@7
  inputs:
    pollingTimeoutSec: '300'

# üîπ 5Ô∏è‚É£ Ejecutar pruebas unitarias
- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
